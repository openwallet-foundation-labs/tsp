name: Deploy
run-name: "Deploy ${{ github.ref_name }} to Google Cloud Run"

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  packages: 'write'
  contents: 'read'
  id-token: 'write'

jobs:
  build-docker:
    name: Build and push Docker container
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Create version tag
        shell: bash
        run: echo "tag=$(git show -s --format="%ct-%h" $GITHUB_SHA)" >> $GITHUB_ENV
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push intermediary
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: "ghcr.io/openwallet-foundation-labs/tsp/demo-intermediary:${{ env.tag }}"
          target: intermediary
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Build and push demo-server
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: "ghcr.io/openwallet-foundation-labs/tsp/demo-server:${{ env.tag }}"
          target: server
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Build and push did-web-server
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: "ghcr.io/openwallet-foundation-labs/tsp/did-web-server:${{ env.tag }}"
          target: did-web
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-intermediaries:
    name: "Deploy to Google Cloud Run"
    runs-on: ubuntu-latest
    needs: build-docker
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Create version tag
        shell: bash
        run: echo "tag=$(git show -s --format="%ct-%h" $GITHUB_SHA)" >> $GITHUB_ENV
      - uses: 'google-github-actions/auth@v2'
        name: Authenticate to Google
        with:
          project_id: 'teaspoon-world-demo'
          workload_identity_provider: 'projects/797284806017/locations/global/workloadIdentityPools/github-actions/providers/actions-tsp'
      - name: Create intermediary declarations
        run: |-
          export TAG="${{ env.tag }}"
          export SERVICE="demo-intermediary-p"
          export DOMAIN="p.teaspoon.world"
          envsubst < deploy/intermediary.template.yaml > intermediary-p.yaml
          export SERVICE="demo-intermediary-q"
          export DOMAIN="q.teaspoon.world"
          envsubst < deploy/intermediary.template.yaml > intermediary-q.yaml
      - name: Create server declaration
        run: |-
          export TAG="${{ env.tag }}"
          export SERVICE="demo-server"
          export DID_SERVER="https://did.teaspoon.world"
          export DOMAIN="demo.teaspoon.world"
          envsubst < deploy/server.template.yaml > server.yaml
      - name: Create DID server declaration
        run: |-
          export TAG="${{ env.tag }}"
          export SERVICE="did-server"
          export TRANSPORT="https://demo.teaspoon.world"
          export DOMAIN="did.teaspoon.world"
          envsubst < deploy/did-web.template.yaml > did-server.yaml
      - name: Deploy intermediary p
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          project_id: 'teaspoon-world-demo'
          metadata: "intermediary-p.yaml"
      - name: Deploy intermediary q
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          project_id: 'teaspoon-world-demo'
          metadata: "intermediary-q.yaml"
      - name: Deploy demo server
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          project_id: 'teaspoon-world-demo'
          metadata: "server.yaml"
      - name: Deploy did web server
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          project_id: 'teaspoon-world-demo'
          metadata: "did-server.yaml"